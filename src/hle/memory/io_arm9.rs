use crate::hle::div_sqrt::DivSqrt;
use crate::hle::hle::{get_cm, get_cpu_regs, get_cpu_regs_mut, Hle};
use crate::hle::memory::dma::Dma;
use crate::hle::timers::Timers;
use crate::hle::CpuType::ARM9;
use crate::logging::debug_println;
use crate::utils::Convert;
use dspsv_macros::{io_ports_read, io_ports_write};
use std::mem;

pub struct IoArm9 {
    div_sqrt: DivSqrt,
    pub dma: Dma,
    pub timers: Timers,
}

impl IoArm9 {
    pub fn new() -> Self {
        IoArm9 {
            div_sqrt: DivSqrt::new(),
            dma: Dma::new(ARM9),
            timers: Timers::new(ARM9),
        }
    }

    pub fn read<T: Convert>(&mut self, addr_offset: u32, hle: &mut Hle) -> T {
        /*
         * Use moving windows to handle reads and writes
         * |0|0|0|  x  |   x   |   x   |   x   |0|0|0|
         *         addr   + 1     + 2     + 3
         */
        let mut bytes_window = [0u8; 10];

        let mut addr_offset_tmp = addr_offset;
        let mut index = 3usize;
        let hle_ptr = hle as *mut Hle;
        let common = unsafe { &mut hle_ptr.as_mut().unwrap_unchecked().common };
        while (index - 3) < mem::size_of::<T>() {
            io_ports_read!(match addr_offset + (index - 3) as u32 {
                io32(0x0) => common.gpu.gpu_2d_a.get_disp_cnt(),
                io16(0x4) => common.gpu.get_disp_stat::<{ ARM9 }>(),
                io16(0x6) => common.gpu.v_count,
                io16(0x8) => common.gpu.gpu_2d_a.get_bg_cnt(0),
                io16(0xA) => common.gpu.gpu_2d_a.get_bg_cnt(1),
                io16(0xC) => common.gpu.gpu_2d_a.get_bg_cnt(2),
                io16(0xE) => common.gpu.gpu_2d_a.get_bg_cnt(3),
                io16(0x48) => todo!(),
                io16(0x4A) => todo!(),
                io16(0x50) => todo!(),
                io16(0x52) => todo!(),
                io16(0x60) => common.gpu.gpu_3d.get_disp_3d_cnt(),
                io32(0x64) => todo!(),
                io16(0x6C) => todo!(),
                io32(0xB0) => self.dma.get_sad::<0>(),
                io32(0xB4) => self.dma.get_dad::<0>(),
                io32(0xB8) => self.dma.get_cnt::<0>(),
                io32(0xBC) => self.dma.get_sad::<1>(),
                io32(0xC0) => self.dma.get_dad::<1>(),
                io32(0xC4) => self.dma.get_cnt::<1>(),
                io32(0xC8) => self.dma.get_sad::<2>(),
                io32(0xCC) => self.dma.get_dad::<2>(),
                io32(0xD0) => self.dma.get_cnt::<2>(),
                io32(0xD4) => self.dma.get_sad::<3>(),
                io32(0xD8) => self.dma.get_dad::<3>(),
                io32(0xDC) => self.dma.get_cnt::<3>(),
                io32(0xE0) => self.dma.get_fill::<0>(),
                io32(0xE4) => self.dma.get_fill::<1>(),
                io32(0xE8) => self.dma.get_fill::<2>(),
                io32(0xEC) => self.dma.get_fill::<3>(),
                io16(0x100) => self.timers.get_cnt_l::<0>(get_cm!(hle)),
                io16(0x102) => self.timers.get_cnt_h::<0>(),
                io16(0x104) => self.timers.get_cnt_l::<1>(get_cm!(hle)),
                io16(0x106) => self.timers.get_cnt_h::<1>(),
                io16(0x108) => self.timers.get_cnt_l::<2>(get_cm!(hle)),
                io16(0x10A) => self.timers.get_cnt_h::<2>(),
                io16(0x10C) => self.timers.get_cnt_l::<3>(get_cm!(hle)),
                io16(0x10E) => self.timers.get_cnt_h::<3>(),
                io16(0x130) => common.input.read().unwrap().key_input,
                io16(0x180) => common.ipc.get_sync_reg::<{ ARM9 }>(),
                io16(0x184) => common.ipc.get_fifo_cnt::<{ ARM9 }>(),
                io16(0x1A0) => todo!(),
                io8(0x1A2) => todo!(),
                io32(0x1A4) => common.cartridge.get_rom_ctrl::<{ ARM9 }>(),
                io8(0x208) => get_cpu_regs!(hle, ARM9).ime,
                io32(0x210) => get_cpu_regs!(hle, ARM9).ie,
                io32(0x214) => get_cpu_regs!(hle, ARM9).irf,
                io8(0x240) => hle.mem.vram.cnt[0],
                io8(0x242) => hle.mem.vram.cnt[1],
                io8(0x243) => hle.mem.vram.cnt[2],
                io8(0x241) => hle.mem.vram.cnt[3],
                io8(0x244) => hle.mem.vram.cnt[4],
                io8(0x245) => hle.mem.vram.cnt[5],
                io8(0x246) => hle.mem.vram.cnt[6],
                io8(0x247) => hle.mem.wram.cnt,
                io8(0x248) => hle.mem.vram.cnt[7],
                io8(0x249) => hle.mem.vram.cnt[8],
                io16(0x280) => self.div_sqrt.div_cnt,
                io32(0x290) => self.div_sqrt.get_div_numer_l(),
                io32(0x294) => self.div_sqrt.get_div_numer_h(),
                io32(0x298) => self.div_sqrt.get_div_denom_l(),
                io32(0x29C) => self.div_sqrt.get_div_denom_h(),
                io32(0x2A0) => self.div_sqrt.get_div_result_l(),
                io32(0x2A4) => self.div_sqrt.get_div_result_h(),
                io32(0x2A8) => self.div_sqrt.get_divrem_result_l(),
                io32(0x2AC) => self.div_sqrt.get_divrem_result_h(),
                io16(0x2B0) => self.div_sqrt.sqrt_cnt,
                io32(0x2B4) => self.div_sqrt.sqrt_result,
                io32(0x2B8) => self.div_sqrt.get_sqrt_param_l(),
                io32(0x2BC) => self.div_sqrt.get_sqrt_param_h(),
                io8(0x300) => get_cpu_regs!(hle, ARM9).post_flg,
                io16(0x304) => common.gpu.pow_cnt1,
                io32(0x600) => todo!(),
                io32(0x604) => todo!(),
                io32(0x620) => todo!(),
                io32(0x624) => todo!(),
                io32(0x628) => todo!(),
                io32(0x62C) => todo!(),
                io16(0x630) => todo!(),
                io16(0x632) => todo!(),
                io16(0x634) => todo!(),
                io32(0x640) => todo!(),
                io32(0x644) => todo!(),
                io32(0x648) => todo!(),
                io32(0x64C) => todo!(),
                io32(0x650) => todo!(),
                io32(0x654) => todo!(),
                io32(0x658) => todo!(),
                io32(0x65C) => todo!(),
                io32(0x660) => todo!(),
                io32(0x664) => todo!(),
                io32(0x668) => todo!(),
                io32(0x66C) => todo!(),
                io32(0x670) => todo!(),
                io32(0x674) => todo!(),
                io32(0x678) => todo!(),
                io32(0x67C) => todo!(),
                io32(0x680) => todo!(),
                io32(0x684) => todo!(),
                io32(0x688) => todo!(),
                io32(0x68C) => todo!(),
                io32(0x690) => todo!(),
                io32(0x694) => todo!(),
                io32(0x698) => todo!(),
                io32(0x69C) => todo!(),
                io32(0x6A0) => todo!(),
                io32(0x1000) => common.gpu.gpu_2d_b.get_disp_cnt(),
                io16(0x1008) => common.gpu.gpu_2d_b.get_bg_cnt(0),
                io16(0x100A) => common.gpu.gpu_2d_b.get_bg_cnt(1),
                io16(0x100C) => common.gpu.gpu_2d_b.get_bg_cnt(2),
                io16(0x100E) => common.gpu.gpu_2d_b.get_bg_cnt(3),
                io16(0x1048) => todo!(),
                io16(0x104A) => todo!(),
                io16(0x1050) => todo!(),
                io16(0x1052) => todo!(),
                io16(0x106C) => todo!(),
                io32(0x100000) => common.ipc.fifo_recv::<{ ARM9 }>(hle),
                io32(0x100010) => common.cartridge.get_rom_data_in::<{ ARM9 }>(hle),
                _ => {
                    if index == 3 {
                        debug_println!("{:?} unknown io port read at {:x}", ARM9, addr_offset);
                    }

                    bytes_window[index] = 0;
                }
            });
            index += 1;
        }
        T::from(u32::from_le_bytes([
            bytes_window[3],
            bytes_window[4],
            bytes_window[5],
            bytes_window[6],
        ]))
    }

    pub fn write<T: Convert>(&mut self, addr_offset: u32, value: T, hle: &mut Hle) {
        let bytes = value.into().to_le_bytes();
        let bytes = &bytes[..mem::size_of::<T>()];
        /*
         * Use moving windows to handle reads and writes
         * |0|0|0|  x  |   x   |   x   |   x   |0|0|0|
         *         addr   + 1     + 2     + 3
         */
        let mut bytes_window = [0u8; 10];
        let mut mask_window = [0u8; 10];
        bytes_window[3..3 + mem::size_of::<T>()].copy_from_slice(bytes);
        mask_window[3..3 + mem::size_of::<T>()].fill(0xFF);

        let mut addr_offset_tmp = addr_offset;
        let mut index = 3usize;
        let hle_ptr = hle as *mut Hle;
        let common = unsafe { &mut hle_ptr.as_mut().unwrap_unchecked().common };
        while (index - 3) < bytes.len() {
            io_ports_write!(match addr_offset + (index - 3) as u32 {
                io32(0x0) => common.gpu.gpu_2d_a.set_disp_cnt(mask, value),
                io16(0x4) => common.gpu.set_disp_stat::<{ ARM9 }>(mask, value),
                io16(0x08) => common.gpu.gpu_2d_a.set_bg_cnt(0, mask, value),
                io16(0xA) => common.gpu.gpu_2d_a.set_bg_cnt(1, mask, value),
                io16(0xC) => common.gpu.gpu_2d_a.set_bg_cnt(2, mask, value),
                io16(0xE) => common.gpu.gpu_2d_a.set_bg_cnt(3, mask, value),
                io16(0x10) => common.gpu.gpu_2d_a.set_bg_h_ofs(0, mask, value),
                io16(0x12) => common.gpu.gpu_2d_a.set_bg_v_ofs(0, mask, value),
                io16(0x14) => common.gpu.gpu_2d_a.set_bg_h_ofs(1, mask, value),
                io16(0x16) => common.gpu.gpu_2d_a.set_bg_v_ofs(1, mask, value),
                io16(0x18) => common.gpu.gpu_2d_a.set_bg_h_ofs(2, mask, value),
                io16(0x1A) => common.gpu.gpu_2d_a.set_bg_v_ofs(2, mask, value),
                io16(0x1C) => common.gpu.gpu_2d_a.set_bg_h_ofs(3, mask, value),
                io16(0x1E) => common.gpu.gpu_2d_a.set_bg_v_ofs(3, mask, value),
                io16(0x20) => common.gpu.gpu_2d_a.set_bg_pa(2, mask, value),
                io16(0x22) => common.gpu.gpu_2d_a.set_bg_pb(2, mask, value),
                io16(0x24) => common.gpu.gpu_2d_a.set_bg_pc(2, mask, value),
                io16(0x26) => common.gpu.gpu_2d_a.set_bg_pd(2, mask, value),
                io32(0x28) => common.gpu.gpu_2d_a.set_bg_x(2, mask, value),
                io32(0x2C) => common.gpu.gpu_2d_a.set_bg_y(2, mask, value),
                io16(0x30) => common.gpu.gpu_2d_a.set_bg_pa(3, mask, value),
                io16(0x32) => common.gpu.gpu_2d_a.set_bg_pb(3, mask, value),
                io16(0x34) => common.gpu.gpu_2d_a.set_bg_pc(3, mask, value),
                io16(0x36) => common.gpu.gpu_2d_a.set_bg_pd(3, mask, value),
                io32(0x38) => common.gpu.gpu_2d_a.set_bg_x(3, mask, value),
                io32(0x3C) => common.gpu.gpu_2d_a.set_bg_y(3, mask, value),
                io16(0x40) => common.gpu.gpu_2d_a.set_win_h(0, mask, value),
                io16(0x42) => common.gpu.gpu_2d_a.set_win_h(1, mask, value),
                io16(0x44) => common.gpu.gpu_2d_a.set_win_v(0, mask, value),
                io16(0x46) => common.gpu.gpu_2d_a.set_win_v(1, mask, value),
                io16(0x48) => common.gpu.gpu_2d_a.set_win_in(mask, value),
                io16(0x4A) => common.gpu.gpu_2d_a.set_win_out(mask, value),
                io16(0x4C) => common.gpu.gpu_2d_a.set_mosaic(mask, value),
                io16(0x50) => common.gpu.gpu_2d_a.set_bld_cnt(mask, value),
                io16(0x52) => common.gpu.gpu_2d_a.set_bld_alpha(mask, value),
                io8(0x54) => common.gpu.gpu_2d_a.set_bld_y(value),
                io16(0x60) => common.gpu.gpu_3d.set_disp_3d_cnt(mask, value),
                io32(0x64) => common.gpu.set_disp_cap_cnt(mask, value),
                io16(0x6C) => common.gpu.gpu_2d_a.set_master_bright(mask, value),
                io32(0xB0) => self.dma.set_sad::<0>(mask, value),
                io32(0xB4) => self.dma.set_dad::<0>(mask, value),
                io32(0xB8) => self.dma.set_cnt::<0>(mask, value, hle),
                io32(0xBC) => self.dma.set_sad::<1>(mask, value),
                io32(0xC0) => self.dma.set_dad::<1>(mask, value),
                io32(0xC4) => self.dma.set_cnt::<1>(mask, value, hle),
                io32(0xC8) => self.dma.set_sad::<2>(mask, value),
                io32(0xCC) => self.dma.set_dad::<2>(mask, value),
                io32(0xD0) => self.dma.set_cnt::<2>(mask, value, hle),
                io32(0xD4) => self.dma.set_sad::<3>(mask, value),
                io32(0xD8) => self.dma.set_dad::<3>(mask, value),
                io32(0xDC) => self.dma.set_cnt::<3>(mask, value, hle),
                io32(0xE0) => self.dma.set_fill::<0>(mask, value),
                io32(0xE4) => self.dma.set_fill::<1>(mask, value),
                io32(0xE8) => self.dma.set_fill::<2>(mask, value),
                io32(0xEC) => self.dma.set_fill::<3>(mask, value),
                io16(0x100) => self.timers.set_cnt_l::<0>(mask, value),
                io16(0x102) => self.timers.set_cnt_h::<0>(mask, value, hle),
                io16(0x104) => self.timers.set_cnt_l::<1>(mask, value),
                io16(0x106) => self.timers.set_cnt_h::<1>(mask, value, hle),
                io16(0x108) => self.timers.set_cnt_l::<2>(mask, value),
                io16(0x10A) => self.timers.set_cnt_h::<2>(mask, value, hle),
                io16(0x10C) => self.timers.set_cnt_l::<3>(mask, value),
                io16(0x10E) => self.timers.set_cnt_h::<3>(mask, value, hle),
                io16(0x180) => common.ipc.set_sync_reg::<{ ARM9 }>(mask, value, hle),
                io16(0x184) => common.ipc.set_fifo_cnt::<{ ARM9 }>(mask, value, hle),
                io32(0x188) => common.ipc.fifo_send::<{ ARM9 }>(mask, value, hle),
                io16(0x1A0) => common.cartridge.set_aux_spi_cnt::<{ ARM9 }>(mask, value),
                io8(0x1A2) => common.cartridge.set_aux_spi_data::<{ ARM9 }>(value),
                io32(0x1A4) => common.cartridge.set_rom_ctrl::<{ ARM9 }>(mask, value, hle),
                io32(0x1A8) => common.cartridge.set_bus_cmd_out_l::<{ ARM9 }>(mask, value),
                io32(0x1AC) => common.cartridge.set_bus_cmd_out_h::<{ ARM9 }>(mask, value),
                io8(0x208) => get_cpu_regs_mut!(hle, ARM9).set_ime(value, get_cm!(hle)),
                io32(0x210) => get_cpu_regs_mut!(hle, ARM9).set_ie(mask, value, get_cm!(hle)),
                io32(0x214) => get_cpu_regs_mut!(hle, ARM9).set_irf(mask, value),
                io8(0x240) => hle.mem.vram.set_cnt(0, value),
                io8(0x241) => hle.mem.vram.set_cnt(1, value),
                io8(0x242) => hle.mem.vram.set_cnt(2, value),
                io8(0x243) => hle.mem.vram.set_cnt(3, value),
                io8(0x244) => hle.mem.vram.set_cnt(4, value),
                io8(0x245) => hle.mem.vram.set_cnt(5, value),
                io8(0x246) => hle.mem.vram.set_cnt(6, value),
                io8(0x247) => hle.mem.wram.set_cnt(value),
                io8(0x248) => hle.mem.vram.set_cnt(7, value),
                io8(0x249) => hle.mem.vram.set_cnt(8, value),
                io16(0x280) => self.div_sqrt.set_div_cnt(mask, value),
                io32(0x290) => self.div_sqrt.set_div_numer_l(mask, value),
                io32(0x294) => self.div_sqrt.set_div_numer_h(mask, value),
                io32(0x298) => self.div_sqrt.set_div_denom_l(mask, value),
                io32(0x29C) => self.div_sqrt.set_div_denom_h(mask, value),
                io16(0x2B0) => self.div_sqrt.set_sqrt_cnt(mask, value),
                io32(0x2B8) => self.div_sqrt.set_sqrt_param_l(mask, value),
                io32(0x2BC) => self.div_sqrt.set_sqrt_param_h(mask, value),
                io8(0x300) => get_cpu_regs_mut!(hle, ARM9).set_post_flg(value),
                io16(0x304) => common.gpu.set_pow_cnt1(mask, value),
                io16(0x330) => todo!(),
                io16(0x332) => todo!(),
                io16(0x334) => todo!(),
                io16(0x336) => todo!(),
                io16(0x338) => todo!(),
                io16(0x33A) => todo!(),
                io16(0x33C) => todo!(),
                io16(0x33E) => todo!(),
                io32(0x350) => common.gpu.gpu_3d.set_clear_color(mask, value),
                io16(0x354) => common.gpu.gpu_3d.set_clear_depth(mask, value),
                io32(0x358) => todo!(),
                io16(0x35C) => todo!(),
                io8(0x360) => todo!(),
                io8(0x361) => todo!(),
                io8(0x362) => todo!(),
                io8(0x363) => todo!(),
                io8(0x364) => todo!(),
                io8(0x365) => todo!(),
                io8(0x366) => todo!(),
                io8(0x367) => todo!(),
                io8(0x368) => todo!(),
                io8(0x369) => todo!(),
                io8(0x36A) => todo!(),
                io8(0x36B) => todo!(),
                io8(0x36C) => todo!(),
                io8(0x36D) => todo!(),
                io8(0x36E) => todo!(),
                io8(0x36F) => todo!(),
                io8(0x370) => todo!(),
                io8(0x371) => todo!(),
                io8(0x372) => todo!(),
                io8(0x373) => todo!(),
                io8(0x374) => todo!(),
                io8(0x375) => todo!(),
                io8(0x376) => todo!(),
                io8(0x377) => todo!(),
                io8(0x378) => todo!(),
                io8(0x379) => todo!(),
                io8(0x37A) => todo!(),
                io8(0x37B) => todo!(),
                io8(0x37C) => todo!(),
                io8(0x37D) => todo!(),
                io8(0x37E) => todo!(),
                io8(0x37F) => todo!(),
                io16(0x380) => todo!(),
                io16(0x382) => todo!(),
                io16(0x384) => todo!(),
                io16(0x386) => todo!(),
                io16(0x388) => todo!(),
                io16(0x38A) => todo!(),
                io16(0x38C) => todo!(),
                io16(0x38E) => todo!(),
                io16(0x390) => todo!(),
                io16(0x392) => todo!(),
                io16(0x394) => todo!(),
                io16(0x396) => todo!(),
                io16(0x398) => todo!(),
                io16(0x39A) => todo!(),
                io16(0x39C) => todo!(),
                io16(0x39E) => todo!(),
                io16(0x3A0) => todo!(),
                io16(0x3A2) => todo!(),
                io16(0x3A4) => todo!(),
                io16(0x3A6) => todo!(),
                io16(0x3A8) => todo!(),
                io16(0x3AA) => todo!(),
                io16(0x3AC) => todo!(),
                io16(0x3AE) => todo!(),
                io16(0x3B0) => todo!(),
                io16(0x3B2) => todo!(),
                io16(0x3B4) => todo!(),
                io16(0x3B6) => todo!(),
                io16(0x3B8) => todo!(),
                io16(0x3BA) => todo!(),
                io16(0x3BC) => todo!(),
                io16(0x3BE) => todo!(),
                io32(0x400) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x404) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x408) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x40C) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x410) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x414) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x418) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x41C) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x420) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x424) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x428) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x42C) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x430) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x434) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x438) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x43C) => common.gpu.gpu_3d.set_gx_fifo(mask, value),
                io32(0x440) => common.gpu.gpu_3d.set_mtx_mode(mask, value),
                io32(0x444) => common.gpu.gpu_3d.set_mtx_push(mask, value),
                io32(0x448) => common.gpu.gpu_3d.set_mtx_pop(mask, value),
                io32(0x44C) => common.gpu.gpu_3d.set_mtx_store(mask, value),
                io32(0x450) => common.gpu.gpu_3d.set_mtx_restore(mask, value),
                io32(0x454) => common.gpu.gpu_3d.set_mtx_identity(mask, value),
                io32(0x458) => common.gpu.gpu_3d.set_mtx_load44(mask, value),
                io32(0x45C) => common.gpu.gpu_3d.set_mtx_load43(mask, value),
                io32(0x460) => common.gpu.gpu_3d.set_mtx_mult44(mask, value),
                io32(0x464) => common.gpu.gpu_3d.set_mtx_mult43(mask, value),
                io32(0x468) => common.gpu.gpu_3d.set_mtx_mult33(mask, value),
                io32(0x46C) => common.gpu.gpu_3d.set_mtx_scale(mask, value),
                io32(0x470) => common.gpu.gpu_3d.set_mtx_trans(mask, value),
                io32(0x480) => common.gpu.gpu_3d.set_color(mask, value),
                io32(0x484) => common.gpu.gpu_3d.set_normal(mask, value),
                io32(0x488) => common.gpu.gpu_3d.set_tex_coord(mask, value),
                io32(0x48C) => common.gpu.gpu_3d.set_vtx16(mask, value),
                io32(0x490) => common.gpu.gpu_3d.set_vtx10(mask, value),
                io32(0x494) => common.gpu.gpu_3d.set_vtx_x_y(mask, value),
                io32(0x498) => common.gpu.gpu_3d.set_vtx_x_z(mask, value),
                io32(0x49C) => common.gpu.gpu_3d.set_vtx_y_z(mask, value),
                io32(0x4A0) => common.gpu.gpu_3d.set_vtx_diff(mask, value),
                io32(0x4A4) => common.gpu.gpu_3d.set_polygon_attr(mask, value),
                io32(0x4A8) => common.gpu.gpu_3d.set_tex_image_param(mask, value),
                io32(0x4AC) => common.gpu.gpu_3d.set_pltt_base(mask, value),
                io32(0x4C0) => common.gpu.gpu_3d.set_dif_amb(mask, value),
                io32(0x4C4) => common.gpu.gpu_3d.set_spe_emi(mask, value),
                io32(0x4C8) => common.gpu.gpu_3d.set_light_vector(mask, value),
                io32(0x4CC) => common.gpu.gpu_3d.set_light_color(mask, value),
                io32(0x4D0) => common.gpu.gpu_3d.set_shininess(mask, value),
                io32(0x500) => common.gpu.gpu_3d.set_begin_vtxs(mask, value),
                io32(0x504) => common.gpu.gpu_3d.set_end_vtxs(mask, value),
                io32(0x540) => common.gpu.gpu_3d.set_swap_buffers(mask, value),
                io32(0x580) => common.gpu.gpu_3d.set_viewport(mask, value),
                io32(0x5C0) => todo!(),
                io32(0x5C4) => todo!(),
                io32(0x5C8) => todo!(),
                io32(0x600) => todo!(),
                io32(0x1000) => common.gpu.gpu_2d_b.set_disp_cnt(mask, value),
                io16(0x1008) => common.gpu.gpu_2d_b.set_bg_cnt(0, mask, value),
                io16(0x100A) => common.gpu.gpu_2d_b.set_bg_cnt(1, mask, value),
                io16(0x100C) => common.gpu.gpu_2d_b.set_bg_cnt(2, mask, value),
                io16(0x100E) => common.gpu.gpu_2d_b.set_bg_cnt(3, mask, value),
                io16(0x1010) => common.gpu.gpu_2d_b.set_bg_h_ofs(0, mask, value),
                io16(0x1012) => common.gpu.gpu_2d_b.set_bg_v_ofs(0, mask, value),
                io16(0x1014) => common.gpu.gpu_2d_b.set_bg_h_ofs(1, mask, value),
                io16(0x1016) => common.gpu.gpu_2d_b.set_bg_v_ofs(1, mask, value),
                io16(0x1018) => common.gpu.gpu_2d_b.set_bg_h_ofs(2, mask, value),
                io16(0x101A) => common.gpu.gpu_2d_b.set_bg_v_ofs(2, mask, value),
                io16(0x101C) => common.gpu.gpu_2d_b.set_bg_h_ofs(3, mask, value),
                io16(0x101E) => common.gpu.gpu_2d_b.set_bg_v_ofs(3, mask, value),
                io16(0x1020) => common.gpu.gpu_2d_b.set_bg_pa(2, mask, value),
                io16(0x1022) => common.gpu.gpu_2d_b.set_bg_pb(2, mask, value),
                io16(0x1024) => common.gpu.gpu_2d_b.set_bg_pc(2, mask, value),
                io16(0x1026) => common.gpu.gpu_2d_b.set_bg_pd(2, mask, value),
                io32(0x1028) => common.gpu.gpu_2d_b.set_bg_x(2, mask, value),
                io32(0x102C) => common.gpu.gpu_2d_b.set_bg_y(2, mask, value),
                io16(0x1030) => common.gpu.gpu_2d_b.set_bg_pa(3, mask, value),
                io16(0x1032) => common.gpu.gpu_2d_b.set_bg_pb(3, mask, value),
                io16(0x1034) => common.gpu.gpu_2d_b.set_bg_pc(3, mask, value),
                io16(0x1036) => common.gpu.gpu_2d_b.set_bg_pd(3, mask, value),
                io32(0x1038) => common.gpu.gpu_2d_b.set_bg_x(3, mask, value),
                io32(0x103C) => common.gpu.gpu_2d_b.set_bg_y(3, mask, value),
                io16(0x1040) => common.gpu.gpu_2d_b.set_win_h(0, mask, value),
                io16(0x1042) => common.gpu.gpu_2d_b.set_win_h(1, mask, value),
                io16(0x1044) => common.gpu.gpu_2d_b.set_win_v(0, mask, value),
                io16(0x1046) => common.gpu.gpu_2d_b.set_win_v(1, mask, value),
                io16(0x1048) => common.gpu.gpu_2d_b.set_win_in(mask, value),
                io16(0x104A) => common.gpu.gpu_2d_b.set_win_out(mask, value),
                io16(0x104C) => common.gpu.gpu_2d_b.set_mosaic(mask, value),
                io16(0x1050) => common.gpu.gpu_2d_b.set_bld_cnt(mask, value),
                io16(0x1052) => common.gpu.gpu_2d_b.set_bld_alpha(mask, value),
                io8(0x1054) => common.gpu.gpu_2d_b.set_bld_y(value),
                io16(0x106C) => common.gpu.gpu_2d_b.set_master_bright(mask, value),
                _ => {
                    if index == 3 {
                        debug_println!(
                            "{:?} unknown io port write at {:x} with value {:x}",
                            ARM9,
                            addr_offset,
                            value.into()
                        );
                    }
                }
            });
            index += 1;
        }
    }
}
