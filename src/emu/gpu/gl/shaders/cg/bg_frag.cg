float3 in screenPos : TEXCOORD0;
float2 in screenPosF : TEXCOORD1;

uniform int dispCnt;
uniform int bgCnts[4];

uniform BgUbo {
    int bgHOfs[192 * 4];
    int bgVOfs[192 * 4];
} BgUbo : BUFFER[0];

uniform sampler2D bgTex : TEXUNIT0;
uniform sampler2D palTex : TEXUNIT1;
uniform sampler2D winTex : TEXUNIT2;

short readBg8(int addr) {
    short addrX = (addr >> 2) & 0x1FF;
    short addrY = addr >> 11;
    float x = float(addrX) / 511.0f;
    float y = float(addrY) / (BG_TEX_HEIGHT - 1.0);
    return short(tex2D(bgTex, float2(x, y))[addr & 3] * 255.0);
}

short readBg16Aligned(int addr) {
    short addrX = (addr >> 2) & 0x1FF;
    short addrY = addr >> 11;
    float x = float(addrX) / 511.0f;
    float y = float(addrY) / (BG_TEX_HEIGHT - 1.0);
    float4 value = tex2D(bgTex, float2(x, y));
    short entry = addr & 2;
    return short(value[entry] * 255.0) | (short(value[entry + 1] * 255.0) << 8);
}

float4 readPal(short index) {
    return tex2D(palTex, float2(float(index) / 511.0, 1.0));
}

float4 drawText(short x, short y, short bgNum) {
    int bgCnt = bgCnts[bgNum];

    int screenAddr = ((dispCnt >> 11) & 0x70000) + ((bgCnt << 3) & 0x0F800);
    int charAddr = ((dispCnt >> 8u) & 0x70000) + ((bgCnt << 12) & 0x3C000);

    x += BgUbo.bgHOfs[bgNum * 192 + y];
    x &= 0x1FF;
    y += BgUbo.bgVOfs[bgNum * 192 + y];
    y &= 0x1FF;

    // 512 Width
    if (x > 255 && (bgCnt & (1 << 14)) != 0) {
        screenAddr += 0x800;
    }

    // 512 Height
    if (y > 255 && (bgCnt & (1 << 15)) != 0) {
        screenAddr += (bgCnt & (1 << 14)) != 0 ? 0x1000 : 0x800;
    }

    short xBlock = x & 0xF8;
    short xInBlock = x & 7;
    short yBlock = y & 0xF8;
    short yInBlock = y & 7;

    screenAddr += yBlock << 3;
    screenAddr += xBlock >> 2;
    int screenEntry = readBg16Aligned(screenAddr);

    bool isHFlip = (screenEntry >> 10) & 1;
    bool isVFlip = (screenEntry >> 11) & 1;

    if (isHFlip) {
        xInBlock = 7 - xInBlock;
    }
    if (isVFlip) {
        yInBlock = 7 - yInBlock;
    }

    bool is8bpp = (bgCnt & (1 << 7)) != 0;
    short palBaseIndex;
    if (is8bpp) {
        charAddr += ((screenEntry & 0x3FF) << 6) + (yInBlock << 3);
        charAddr += xInBlock;
        palBaseIndex = 0;
    } else {
        charAddr += ((screenEntry & 0x3FF) << 5) + (yInBlock << 2);
        charAddr += xInBlock >> 1;
        palBaseIndex = (screenEntry & 0xF000) >> 8;
    }

    short palIndex = readBg8(charAddr);
    if (!is8bpp) {
        palIndex >>= 4 * (xInBlock & 1);
        palIndex &= 0xF;
    }
    if (palIndex == 0) {
        discard;
    }
    palIndex += palBaseIndex;

    return float4(readPal(palIndex).rgb, 1.0);
}

void main(out float4 color : COLOR) {
    short x = short(screenPos.x);
    short y = short(screenPos.y);
    short bgNum = short(screenPos.z);

    short winEnabled = short(tex2D(winTex, screenPosF).x * 255.0);
    if ((winEnabled & (1 << bgNum)) == 0) {
        discard;
    }

    color = drawText(x, y, bgNum);
}
